[1:NOTES][2:DESIGN-CODE][3:tiki_to_md.hs][4:Spec.hs]*!

./run_tests.sh -m unphone

stack runghc test/Spec.hs -- -m rectifier

stack hoogle -- server --local -p 8084 --host '*' 


DESIGN-SITE is what we're aiming for the site to look like.

DESIGN-CODE is the design of the code itself.

When ready, move both *into* the blog itself, and make them
symlinks.

Inline docs syntax: https://www.haskell.org/haddock/doc/html/ch03s02.html

Should probably install https://github.com/vim-pandoc/vim-pandoc
globally, and use that for all markdown.

isURIReference from https://hackage.haskell.org/package/network-uri-2.6.1.0/docs/Network-URI.html
https://hackage.haskell.org/package/edit-distance


TODO
----

- Make a test shim that does file diffs, and a tests/ directory for
  same, instead of trying to pretend that posts/ is actual content
- Make a wiki style link processor; use posts/computing/md_test.md
  for testing
  - see unphone.hs for a description of what we want; make sure that
  description is propogated somewhere, like DESIGN-CODE
  - MAYBE have a shortname metadata for local/wiki-style links that
    is unique (error out if it's not) and always always works; this
    is less interesting in the context of rectifier
- add extensions to the pandoc ; see https://nickcharlton.net/posts/custom-pandoc-options-hakyll-4.html
  We need auto_identifiers and implicit_header_references , at
  least.  It might be nice to have: header_attributes
  backtick_code_blocks fenced_code_attributes table_captions
  simple_tables multiline_tables intraword_underscores
  link_attributes footnotes inline_notes ascii_identifiers
  blank_before_header blank_before_blockquote

  which does hakyll set?
- Replace qwl with a normal link to local: title, resolve said link
  in the compilation step (and bail if you can't). IOW, preserve
  some wiki ness in the source, even if not the qw syntax
  - ?? can we do our wiki transformations on the AST generated by
    pandoc and get type safety advantages that way?
- see "dates" below
- We have both
  _site/categories/computing.html
  _site/posts/computing/index.html
  , do we want both?  How would a user end up on one or the other?
- move css/ , index.html , etc into assets/ ?
  - Not sure about that, but index.html seems silly; have
  posts/[site]/index.md with whatever verbiage ; left sidebar
  favorites is posts/[site]/faves.md
- make "Posted in: " not show up in the rendering if there's no
tags; also maybe rename that to "Tags: " or something
- freak out if git diff is non-zero for a source file
- make script to run the generation, send upset email if it doesn't
work, and push the results into our webspace
- Bail on dead links, both in hakyll loading and in tiki_to_md
- Nice-to-have: generate a history page for each page that does colored diff
markup

DATES
-----

Currently we have published: and origdate:.  published: gets
converted, via dateField , to become "Posted on July 1, 2016" or
whatever.

(WTH is origdate: for, then??)

It would be much nicer to use git (see below) for dates whenever
possible.  Have both "First Posted On ..." and "Last Updated On
...".  Have tags (named the obvious slugs; why not?) that can
override, as overriding will be very important for the tiki imports.

The last-updated-on: tag, however, has to come with a
last-updated-ignores-git: tag, which must contain the commit hash
for the most recent git commit. This is to prove that "yes, this
override is still current, even if git is different/more recent; I
checked".

Example:

last-updated-on: 2012-08-11
last-updated-ignores-git: 2dd13a0b2986e4a44e7c7cf1a00f1b8ed0252f9e

Ideally, if last-updated-ignores-git: is set and doesn't match the
most recent git commit, we error out.

Crashing horribly if the source file isn't in git is fine and
correct, although feel free to do so with a pretty error message.



Note to self:

  Git file create time:

    git log --diff-filter=A --follow --format=%aD -1 -- README.md

  tiki export: 

    https://www.mediawiki.org/wiki/Manual:TikiWiki_Conversion#Exporting

hakyll explanations / helpers:

  https://github.com/beerendlauwers/hakyll-extra

  https://jaspervdj.be/hakyll/tutorials.html#external-articles

  https://groups.google.com/forum/#!topic/hakyll/y16jUQ_oFEA


hakyll examples:

  https://gist.github.com/kkspeed/1dfb964009b19ae00ac3
  
  better: https://github.com/kkspeed/WebBlog
  
  http://gist.github.com/kowey/5517578
  
  https://github.com/search?q=buildTagsWith&type=Code&utf8=%E2%9C%93
  
  http://jaspervdj.be/
  
    https://github.com/jaspervdj/jaspervdj/blob/ae5f215339a29d14269fe6a5fb5b34870be2c178/src/Main.hs
  

DONE
----

- Make sure that normal local links actually work, using posts/personal/links.md
